@model RegisterViewModel

@{
    ViewData["Title"] = "Register";
}


<div class="container">
    <h3>Register</h3>
    <div class="row">
        <div class="col-sm">
            <form asp-action="Index">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="TeamId" class="control-label" style="margin-bottom: .1rem;font-weight: 500;">TeamId</label>
                    <input type="text" class="form-control mb-3 w-75" asp-for="TeamId" />
                    <span asp-validation-for="TeamId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Location" class="control-label" style="margin-bottom: .1rem;font-weight: 500;">Location</label>
                    <select asp-for="Location" class="form-control mb-3 w-75" asp-items="ViewBag.Location" >
                        <option>Select</option>
                    </select>
                    <span asp-validation-for="Location" class="text-danger"></span>
                </div>

            <div id="teamMembers">
                @for (var i = 0; i < Model.TeamMembers.Count; i++)
                {
                    var currentLabel = $"TeamMember {i + 1}";
                    var buttonId = $"btnDelField_{i}";
                    var divId = $"teamMemberDiv_{i}";
                    <div class="row align-items-end" id="@divId">
                        <div class="form-group col-sm-7">
                            <label asp-for="TeamMembers[i].EmailId" class="control-label" style="margin-bottom: .1rem;font-weight: 500;">@currentLabel</label>
                            <input type="text" class="form-control mb-3" asp-for="TeamMembers[i].EmailId" />
                            <span asp-validation-for="TeamMembers[i].EmailId" class="text-danger"></span>
                        </div>
                        <div id="delBtnDiv_0">
                            @if (Model.TeamMembers.Count > 1)
                            {
                                <div class="col-sm-2">
                                    <button id="@buttonId" type="button" class="btn btn-danger">Delete</button>
                                </div>
                            }
                        </div>
                            @if (i == 0 && Model.TeamMembers.Count < 5)
                            {
                                <div class="col-sm-2">
                                    <button id="btnAddField" type="button" class="btn btn-success">Add</button>
                                </div>
                            }
                    </div>
                }
            </div>

                <div class="form-group">
                    <input type="submit" value="Register" class="btn btn-primary" />
                </div>
            </form>
        </div>
        <div class="col-sm">
            <table id="index" class="table table-striped table-bordered w-100">
                <thead>
                    <tr>
                        <th>TeamName</th>
                        <th>Location</th>
                        <th>RegistrationTime</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">

    var teamMembers = new Array("");

    var fieldCount = 1

    GetIndex = (context) => {
        // works when element id is in form string_index
        var id = $(context).attr("id");
        var c = id.split('_')[1]
        var index = parseInt(c)
        return index
    }

    GenerateFields = () => {
        $('#teamMembers').empty();
        for (var n = 0; n < teamMembers.length; n++) {
            var $fields = $('#teamMembers');
            var newTeamMemberField = `\
                    <div class="row align-items-end" id="teamMemberDiv_${n}">\
                        <div class="form-group col-sm-7">\
                            <label class="control-label" style="margin-bottom: .1rem;font-weight: 500;" for="TeamMembers_${n}__EmailId">TeamMember ${n + 1}</label>\
                            <input type="text" class="form-control mb-3" data-val="true" data-val-email="The EmailId field is not a valid e-mail address." data-val-required="Email Id Required" id="TeamMembers_${n}__EmailId" name="TeamMembers[${n}].EmailId" value = "${teamMembers[n]}"/>\
                            <span class="text-danger field-validation-valid" data-valmsg-for="TeamMembers[${n}].EmailId" data-valmsg-replace="true"></span>\
                        </div>\
                    `
            if (n > 0)
                newTeamMemberField = newTeamMemberField +
                    `<div id="delBtnDiv_${n}">\
                            <div class="col-sm-2">\
                                <button id="btnDelField_${n}" type = "button" class="btn btn-danger"> Delete</button>\
                            </div>\
                        </div >\
                        `
            if (n == 0 && fieldCount < 5)
                newTeamMemberField = newTeamMemberField +
                    `<div class="col-sm-2">\
                            <button id="btnAddField" type="button" class="btn btn-success">Add</button>\
                        </div>\
                        `
            newTeamMemberField += `</div>`
            $(newTeamMemberField).appendTo($fields);
        }
    }

    function OnSuccess(response) {
        $("#tblCustomers").DataTable(
            {
                bLengthChange: true,
                lengthMenu: [[5, 10, -1], [5, 10, "All"]],
                bFilter: true,
                bSort: true,
                bPaginate: true,
                data: response,
                columns: [{ 'data': 'TeamId' },
                { 'data': 'Location' },
                { 'data': 'RegistrationTime' }]
            });
    };

    $(document).ready(function () {

        $('#teamMembers').on("click", '#btnAddField', function (e) {
            e.preventDefault();
            fieldCount++;
            teamMembers.push("");
            GenerateFields()
        });

        $('#teamMembers').on("click", 'button[id*="btnDelField"]', function (e) {
            e.preventDefault();
            fieldCount--;
            teamMembers.splice(GetIndex(this), 1)
            GenerateFields()
        })

        $('#teamMembers').on("input", 'input[name*="TeamMembers"]', function (e) {
            e.preventDefault();
            var index = GetIndex(this)
            teamMembers[index] = $(this).val()
        });

        $('#index thead tr').clone(true).appendTo('#index thead');

        $('#index thead tr:eq(1) th').each(function (i) {
            var title = $(this).text();

            switch (title) {
                case "Type":
                    $(this).html('some html to render');

                    $('select', this).on('change', function () {
                        if (table.column(i).search() !== this.value) {
                            table.column(i).search(this.value).draw();
                        }
                    });
                    break;
                case "Id":
                case "RegistrationTime":
                    $(this).html('    ');
                    break;
                default:
                    $(this).html('<input style="width: 100%;" type="text" placeholder="' + title + '"/>');

                    $('input', this).on('keyup change', function () {
                        if (table.column(i).search !== this.value) {
                            table.column(i).search(this.value).draw();
                        }
                    });
                    break;
            }
        });

        var table = $('#index').DataTable({
            "processing": true,
            "serverSide": true,
            "orderCellsTop": true,
            "fixedHeader": true,
            "scrollY": 800,
            "scrollX": true,
            //"scrollCollapse": true,
            "fixedColumns": true,
            "sDom": '<"top"l>rt<"bottom"ip><"clear">',
            "ajax": {
                "url": '@Url.Action("LoadData", "Register")',
                "dataType": "json"
            },
            "order": [[0, "desc"]],
            //"columnDefs": [
            //    { targets: 3, render: function (data, type, row) { return displayDate(data); } }
            //],
            "columns": [
                //{ "data": "id", "width": "30px" },
                { "data": "teamId", "autoWidth": true },
                { "data": "location", "autoWidth": true },
                { "data": "registrationTime", "autoWidth": true },
                @*{
                    "data": "name", "width": "200px",
                    "fnCreatedCell": function (nTd, sData, oData, iRow, iCol) {
                        $(nTd).html("<a href='@Url.Action("Manage", "IndexManagement")/" + oData.id + "'>");
                    }

                }*@
            ],

        })
    });

</script>
}
